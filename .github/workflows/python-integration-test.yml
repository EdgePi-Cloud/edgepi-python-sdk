# This workflow will install Python dependencies, run tests using PyTest.

name: PyTest Integration Test

on:
  push:
    branches:
      - 'integration-test-implement'
  pull_request:
    branches:
      - 'integration-test-implement'

jobs:
  test:
    name: Integration Tests
    runs-on: [self-hosted, linux, ARM64, integration]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m venv venv_test
          source venv_test/bin/activate
          python -m pip install pytest
          if [ -f requirements_test.txt ]; then pip install -r requirements_test.txt; fi
      - name: Test with pytest
        run: |
          source venv_test/bin/activate
          cd src/
          python -m pytest ../tests/integration_tests --cov --cov-report=xml
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.2.0
        with:
          filename: test_cov/coverage.xml
          badge: true
          format: markdown
          hide_complexity: true
          indicators: true
          output: both
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: code-coverage-results.md
